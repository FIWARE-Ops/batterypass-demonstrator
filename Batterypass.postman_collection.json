{
	"info": {
		"_postman_id": "57cb6caf-299b-482f-89b6-ffd44e0c10fe",
		"name": "Batterypass",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13324429"
	},
	"item": [
		{
			"name": "Token ONE->ONE",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Api-Key",
						"value": "YmkdxHZuAWCWFIiZs5TF5hUHhR5WZBkH",
						"type": "text"
					}
				],
				"url": {
					"raw": "one.batterypass.fiware.dev/token?clientId=EU.EORI.DEONE&idpId=EU.EORI.DEONE",
					"host": [
						"one",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"token"
					],
					"query": [
						{
							"key": "clientId",
							"value": "EU.EORI.DEONE"
						},
						{
							"key": "idpId",
							"value": "EU.EORI.DEONE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Token TWO->ONE",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Api-Key",
						"value": "YmkdxHZuAWCWFIiZs5TF5hUHhR5WZBkH",
						"type": "text"
					}
				],
				"url": {
					"raw": "one.batterypass.fiware.dev/token?clientId=EU.EORI.DETWO&idpId=EU.EORI.DEONE",
					"host": [
						"one",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"token"
					],
					"query": [
						{
							"key": "clientId",
							"value": "EU.EORI.DETWO"
						},
						{
							"key": "idpId",
							"value": "EU.EORI.DEONE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Token THREE->ONE",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Api-Key",
						"value": "YmkdxHZuAWCWFIiZs5TF5hUHhR5WZBkH",
						"type": "text"
					}
				],
				"url": {
					"raw": "one.batterypass.fiware.dev/token?clientId=EU.EORI.DETHREE&idpId=EU.EORI.DEONE",
					"host": [
						"one",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"token"
					],
					"query": [
						{
							"key": "clientId",
							"value": "EU.EORI.DETHREE"
						},
						{
							"key": "idpId",
							"value": "EU.EORI.DEONE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get API-KEY",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Api-Key",
						"value": "key",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8001/key-auths",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"key-auths"
					]
				},
				"description": "Precondition: \n- find the pod name of kong-one `kubectl get pods -n batterypass`\n- forward the admin-port to localhost: `kubectl port-forward kong-one-kong-<id> 8001:8001 -n batterypass`"
			},
			"response": []
		},
		{
			"name": "Get accesstoken from AR",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "iSHARE",
							"type": "text"
						},
						{
							"key": "client_assertion_type",
							"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
							"type": "text"
						},
						{
							"key": "client_assertion",
							"value": ".eyJhdWQiOiJFVS5FT1JJLkRFQkFUVEVSWVBBU1NBUiIsImV4cCI6MTY3NDcyOTE0OCwiaWF0IjoxNjc0NzI5MTE4LCJpc3MiOiJFVS5FT1JJLkRFT05FIiwianRpIjoiNmYzM2EwN2QtNDlmOS00YTk1LTgzMjItMThkZjUzNTQ3OTM2Iiwic3ViIjoiRVUuRU9SSS5ERU9ORSJ9.4JVoPoCRI_XWurxKTgA6KiRzsKALaQQGtixlU9GJL0LBQGoQx6gx_0oLESvTG2MYUNIspI2mntgzkawNMAts6qbD9qGxFjuMyGaITFxsxOVhQRHTM9u3HUi0ofO1dRgOwtWWjyxIQosN_hCK7lLiwCvrk0Z66U5LwiMbIvdmXi4VH86_5qQWbTVAl5uOwt_sArqO6xTuF5BAZ2WySp1tYr9oe43j_98fpXkpFmc73anaXyvTrnSP6XsNC1tm9nBV8pRZvRMhz8pmIQhOpm_wS_a8asAG4I2PIdn1t4O0hYqJ_9CFd758LnOwiumIvYxy5tTLk_siO1IsVo80U3X4fAwGyCbCIYTbgWE1-YCWkCOdC3FNspdFevXayWq8sOjyNhV23py1t6HbIAkEmkwS_uAMZ7Wvo64fu76XPn2o6PCWQvB5MQgprK5OOkUg2mBleZq8_7UVLxfTatYHLnJqrEiY88B6JWFNJLHlhbEPI-DrKAGMyFYqhvPA6hYlRbzP0CTIzA0KJkwWWnlX3EuIpa4JawGp-9NMSkSDG4IRb_iER3wowoSd-0UcEorGWyGdNqteFLpuxlVs3yFan0Fn60ibdDaoRXeLzBkQz2AlRHvGZl7UbMjk5NDyl3cv-XEjqoSQY6ukDFpFCvhQnqOMVD0aqtIfI9UMPoviXJs0ggU",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "EU.EORI.DEONE",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "ar.batterypass.fiware.dev/oauth2/token",
					"host": [
						"ar",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"oauth2",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get accesstoken from ONE",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "iSHARE",
							"type": "text"
						},
						{
							"key": "client_assertion_type",
							"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
							"type": "text"
						},
						{
							"key": "client_assertion",
							"value": ".eyJhdWQiOiJFVS5FT1JJLkRFT05FIiwiZXhwIjoxNjc0NzM2NDcxLCJpYXQiOjE2NzQ3MzY0NDEsImlzcyI6IkVVLkVPUkkuREVUV08iLCJqdGkiOiIzMTRhMTBkNi1hZDZmLTQ1YTgtYTNhYS0wOWE1YTViZjllZGUiLCJzdWIiOiJFVS5FT1JJLkRFVFdPIn0.zsacVVK0C3tt-XFTV2ItyONyXfbbQxC7zp9MgFvqMjER0RMxv1LffB9HCmbNRfgH4RhSyRYmrsMN2EI4DN2AQIU1fNL_t-2W2Z7Ve5viddme00rHMuj25z1yMjWkybHwecqSE4dJ5oW8hGQppBTOvFKmFDCHHf4P7CjUHxLs3CKRhD5xjdTdNULfvtg6jyTSawx9-kPeGWGvJuFrInwUWtQQVPWpAgL_2L2zErO2kWN_7Z7WTPQWdAeUB8Txg2rbMo29Ss6f5Wetxp3sbL4g3gzB4jNu9HMIKrMw6YYH8CAKBtwLtknzkIvPpmfz-8YEXf4FjS-SkHd4pmlrCuiSUPcQdNEHXOeQAxGBkzABS_NcgqbgojP38V5k-Z0_En3cRokExeZfRJUGmjdJUEWXgJXsckSi5iqxjALmDwnN-FC2viGcoljPB6HfghaT31a7l6YkJ0BqV9_qYVKdoPwVhiW0wqcDiDlWxxXi0cRwYagw4cMEsFt-VDjx-Bj-6wihFUDPQrMePprETXHtVaRDeqJPIzV2Ja_NMOFmorReUQxlTOzI9H0FObRftNd_QMMhWep-_TPRDSZ1XzVDZqJL_LM-SPWtEX8Ok-tJ5ZMhv_VsPsV2n89F2ToNcw6ITp07DKUZvFU34AAeBgKp6YnQRgnF7bAnacQe8FWBU7O9BOc",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "EU.EORI.DETWO",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://idm-one.batterypass.fiware.dev/oauth2/token",
					"protocol": "https",
					"host": [
						"idm-one",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"oauth2",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Policy creation ONE allows \"BATTERY-CRUD\" for TWO",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": ".eyJpc3MiOiJFVS5FT1JJLkRFT05FIiwic3ViIjoiRVUuRU9SSS5ERU9ORSIsImp0aSI6ImIyMDU1ZjUyLWRjOGUtNGY1ZC1iZTNjLTA0MTdjOWM3OTE3YiIsImlhdCI6MTY3NDczOTg4MCwiZXhwIjoxNjc0NzQzNDgwLCJhdWQiOiJFVS5FT1JJLkRFT05FIn0.vvERyNIe2C9lW3qyCY-YhKfXsronzwqTjQQMEx6NJPXDWbgdHzun_8mO0oKZNtlW17M1WqdLR10Dy780YqSwMGnJUKJtCmK8xG5A0EPN3IvfbYcs9jCufkPFprJ0s8vyXpXreBpS5PqZOKOa4KwUXV7I91oEZ8iSZT5X1-q910YWmv8kMjsc0UarctLnCoXhAT7V5gYX3eFrFX1cvPp75hr0To-INpK7pqkI_aPxTWWueQ8juuAxECtbh0d2EdLU7PyL6nyZqkuAkZ6PafHGakvHvmzHL7HYgUSRB3z_4GxyN7wQzEo4rKxRdUwvbFadbgpyu1NFc5PtXRdm_DZLjvK3ZMivlu7MSxhJzPa_eG5AEbNcvp109_LFXo-Cds3bkOJy7AjowTplRIeS9qkGx3G_Z3QUYN8bwvMr4bUZZraZ3KXScqQI55E_8aSM29N1JG33M8Ye8ATCQhefWWtwc4RhPch2utJwMtasMbMfiIyMlbbGrXM608Va1uPG4Jfcq5evduvih78PqQFnL5xelZjdlpZFr-GNUIqk-kOaSJx-y4jXDi2dkkPlPyBVw1M1euXz5Ie6G1UQ374kiB79WB4nBmuqyhPUzEY0JTTQR9t1BghRYdREz9VDuURNtOrRpsMa8ygvtc7dCZc59KRU--aU_dYGJPg09hLW8i8MVhk",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"delegationEvidence\": {\n\t\t\"notBefore\": 1614354348,\n\t\t\"notOnOrAfter\": 1737894651,\n\t\t\"policyIssuer\": \"EU.EORI.DEONE\",\n\t\t\"target\": {\n\t\t\t\"accessSubject\": \"EU.EORI.DETWO\"\n\t\t},\n\t\t\"policySets\": [\n\t\t\t{   \n                \"target\": {\n                    \"environment\": {\n                        \"licenses\": [ \"ISHARE.0001\" ]\n                    }  \n                },\n\t\t\t\t\"policies\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"target\": {\n\t\t\t\t\t\t\t\"resource\": {\n\t\t\t\t\t\t\t\t\"type\": \"BATTERY\",\n\t\t\t\t\t\t\t\t\"identifiers\": [\n\t\t\t\t\t\t\t\t\t\"*\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"attributes\": [\n\t\t\t\t\t\t\t\t\t\"*\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"actions\": [\n\t\t\t\t\t\t\t\t\"POST\",\n                                \"GET\",\n                                \"PUT\",\n                                \"DELETE\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"effect\": \"Permit\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://idm-one.batterypass.fiware.dev/ar/policy",
					"protocol": "https",
					"host": [
						"idm-one",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"ar",
						"policy"
					]
				}
			},
			"response": []
		},
		{
			"name": "Policy creation ONE allows \"BATTERY-CRUD\" for ONE",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": ".eyJpc3MiOiJFVS5FT1JJLkRFT05FIiwic3ViIjoiRVUuRU9SSS5ERU9ORSIsImp0aSI6ImIyMDU1ZjUyLWRjOGUtNGY1ZC1iZTNjLTA0MTdjOWM3OTE3YiIsImlhdCI6MTY3NDczOTg4MCwiZXhwIjoxNjc0NzQzNDgwLCJhdWQiOiJFVS5FT1JJLkRFT05FIn0.vvERyNIe2C9lW3qyCY-YhKfXsronzwqTjQQMEx6NJPXDWbgdHzun_8mO0oKZNtlW17M1WqdLR10Dy780YqSwMGnJUKJtCmK8xG5A0EPN3IvfbYcs9jCufkPFprJ0s8vyXpXreBpS5PqZOKOa4KwUXV7I91oEZ8iSZT5X1-q910YWmv8kMjsc0UarctLnCoXhAT7V5gYX3eFrFX1cvPp75hr0To-INpK7pqkI_aPxTWWueQ8juuAxECtbh0d2EdLU7PyL6nyZqkuAkZ6PafHGakvHvmzHL7HYgUSRB3z_4GxyN7wQzEo4rKxRdUwvbFadbgpyu1NFc5PtXRdm_DZLjvK3ZMivlu7MSxhJzPa_eG5AEbNcvp109_LFXo-Cds3bkOJy7AjowTplRIeS9qkGx3G_Z3QUYN8bwvMr4bUZZraZ3KXScqQI55E_8aSM29N1JG33M8Ye8ATCQhefWWtwc4RhPch2utJwMtasMbMfiIyMlbbGrXM608Va1uPG4Jfcq5evduvih78PqQFnL5xelZjdlpZFr-GNUIqk-kOaSJx-y4jXDi2dkkPlPyBVw1M1euXz5Ie6G1UQ374kiB79WB4nBmuqyhPUzEY0JTTQR9t1BghRYdREz9VDuURNtOrRpsMa8ygvtc7dCZc59KRU--aU_dYGJPg09hLW8i8MVhk",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"delegationEvidence\": {\n\t\t\"notBefore\": 1614354348,\n\t\t\"notOnOrAfter\": 1737894651,\n\t\t\"policyIssuer\": \"EU.EORI.DEONE\",\n\t\t\"target\": {\n\t\t\t\"accessSubject\": \"EU.EORI.DEONE\"\n\t\t},\n\t\t\"policySets\": [\n\t\t\t{   \n                \"target\": {\n                    \"environment\": {\n                        \"licenses\": [ \"ISHARE.0001\" ]\n                    }  \n                },\n\t\t\t\t\"policies\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"target\": {\n\t\t\t\t\t\t\t\"resource\": {\n\t\t\t\t\t\t\t\t\"type\": \"BATTERY\",\n\t\t\t\t\t\t\t\t\"identifiers\": [\n\t\t\t\t\t\t\t\t\t\"*\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"attributes\": [\n\t\t\t\t\t\t\t\t\t\"*\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"actions\": [\n\t\t\t\t\t\t\t\t\"POST\",\n                                \"GET\",\n                                \"PUT\",\n                                \"DELETE\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"effect\": \"Permit\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://idm-one.batterypass.fiware.dev/ar/policy",
					"protocol": "https",
					"host": [
						"idm-one",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"ar",
						"policy"
					]
				}
			},
			"response": []
		},
		{
			"name": "Policy creation ONE allows \"BATTERY-GET-SoC\" for THREE",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": ".eyJpc3MiOiJFVS5FT1JJLkRFT05FIiwic3ViIjoiRVUuRU9SSS5ERU9ORSIsImp0aSI6IjZlZjM0MmMxLTA3NTEtNGY2Zi04MzNjLWY3ZDgxNmQ4ODU0ZCIsImlhdCI6MTY3NDc0MDI0NSwiZXhwIjoxNjc0NzQzODQ1LCJhdWQiOiJFVS5FT1JJLkRFT05FIn0.pSn5hVzHO6TkPDOPqVE24V4Gt1YNNY3jsLy1savjxyN10reco9gug3oD6gsoN-TZOgofXjpN9ZZLzkgFl2zvM1zhH6Yp7RVimbcdKAWJiwk9_OY7Q68wKHjfYxGIqairXkY_4Rb5fRAatw-TUoz5qF0oiPbHtONVaNzeDShVBKC1YBUZsUMNJFI8s-eIRr5ewR3V6WrIofZ7SVKd9pUdnAY6YDGTjRbWcHFsLWEUV0pd_6j0eAxYDpOFSeTiONsQvycYciXxycJnfuAiVSK5nBYmhkgtNiS5GwVf4_hdM6o_9ocCmW6PIOpReID75ksFam6R-iUWyfyVO50Snm4oQbUZTu5wm_LpGH16buZ1W6c6IWtU90g3sSq9S77wvV9i9-kTH6hJk2LMVTH-4nw8B2I7G0hoPbTehgeBXkTzYd22bEq9rCINZMgKGtOa_64lzos8Fff2KRm7HjgwlhIKHmHlwgapklPG1pzNh5pVbOsbgjrcjmBCiCmYgDF9Nt-RCVaHxBZiV7bYxYgPurlZU0rrlTnNVbyGClkfmgflh6dwmjbSuEOkT5pSCnV0XvatUgOW0ov1izw_EQzRX36lK12T04_b7xGaMIbII_Yy1sTbMBJsqnWrsducmf7idqAFVr0_O-j3LohTxNDJDtBBW1FfkkwbeZdybDvbJUDbm0c",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"delegationEvidence\": {\n\t\t\"notBefore\": 1614354348,\n\t\t\"notOnOrAfter\": 1737894651,\n\t\t\"policyIssuer\": \"EU.EORI.DEONE\",\n\t\t\"target\": {\n\t\t\t\"accessSubject\": \"EU.EORI.DETHREE\"\n\t\t},\n\t\t\"policySets\": [\n\t\t\t{   \n                \"target\": {\n                    \"environment\": {\n                        \"licenses\": [ \"ISHARE.0001\" ]\n                    }  \n                },\n\t\t\t\t\"policies\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"target\": {\n\t\t\t\t\t\t\t\"resource\": {\n\t\t\t\t\t\t\t\t\"type\": \"BATTERY\",\n\t\t\t\t\t\t\t\t\"identifiers\": [\n\t\t\t\t\t\t\t\t\t\"*\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"attributes\": [\n\t\t\t\t\t\t\t\t\t\"SoC\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"actions\": [\n                                \"GET\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"effect\": \"Permit\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://idm-one.batterypass.fiware.dev/ar/policy",
					"protocol": "https",
					"host": [
						"idm-one",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"ar",
						"policy"
					]
				}
			},
			"response": []
		},
		{
			"name": "TWO -> GET BATTERIES from ONE",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": ".eyJpc3MiOiJFVS5FT1JJLkRFT05FIiwic3ViIjoiRVUuRU9SSS5ERVRXTyIsImp0aSI6ImMyYTQyZjRkLWNmNWYtNDM0Zi05MGJmLTI4NTY1MGNkODQyNCIsImlhdCI6MTY3NDczOTk2MCwiZXhwIjoxNjc0NzQzNTYwLCJhdWQiOiJFVS5FT1JJLkRFT05FIn0.eYp3jELI1Rr4DgQbVfMYUS6L8dsJEaaIh56aIu_uEbUQskeUXqAwy9PrKM268rEqMzujVPYgYt6szVHL2nMF195AxM3aejUnl_EumPNzMtWb5mTTBro7QwXR5J-fCPjfNTSKHF2D8FSEpPeA36yRqnmL2wdJ1seMVPQ1tEx7eRjZ_-_Y7yjx-1XPFBMBK8N1yPtDZmgUmxJMXoeEwQbzKzh6r4oAgcuCeGvsSA5Pb0z0edWwlGW_uzCWtmQhDu8Fv4iy2d4dIrsiy0_CAw10seZ4MfkxCvkC2XY95q1FXV_TwY_DgolaAgTl7uPuZA3k3cSQLiZTsluEXXQGi4k7ekZ4tSKyY1QwRmHkqSoh-BOgbtnkmm2__6o3cx4UA0f95OIhZr4gS1Mkx3GkT2r7Jgm8eEXBjnnQ8YBSOjvh6MApFfahhtUo84SikB5Q_d6WQc7gzstZJGDrpecaq9PqLSBz_mEkNX3UsvZ9aFAAeFYEUScUPzOKWix5szoz5__fMP8F78dLh8EljavMQyDIHzwAJj-Uc3odENwAsnqDQO5_EhmQMZpi6N5X7yz8QBAfZSXTmjQL1cFjGh1XWox3nhU1labFjFARGE96X4b0v-TXcheuS_XojA90rbwlHZyPS1U4CpjmEleft3_03reJuRsbi0JY1sIM5nV0rfuBrXY",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://one.batterypass.fiware.dev/i4trust/ngsi-ld/v1/entities?type=BATTERY",
					"protocol": "https",
					"host": [
						"one",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"i4trust",
						"ngsi-ld",
						"v1",
						"entities"
					],
					"query": [
						{
							"key": "type",
							"value": "BATTERY"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "TWO -> CREATE BATTERY at ONE",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": ".eyJpc3MiOiJFVS5FT1JJLkRFT05FIiwic3ViIjoiRVUuRU9SSS5ERVRXTyIsImp0aSI6ImMyYTQyZjRkLWNmNWYtNDM0Zi05MGJmLTI4NTY1MGNkODQyNCIsImlhdCI6MTY3NDczOTk2MCwiZXhwIjoxNjc0NzQzNTYwLCJhdWQiOiJFVS5FT1JJLkRFT05FIn0.eYp3jELI1Rr4DgQbVfMYUS6L8dsJEaaIh56aIu_uEbUQskeUXqAwy9PrKM268rEqMzujVPYgYt6szVHL2nMF195AxM3aejUnl_EumPNzMtWb5mTTBro7QwXR5J-fCPjfNTSKHF2D8FSEpPeA36yRqnmL2wdJ1seMVPQ1tEx7eRjZ_-_Y7yjx-1XPFBMBK8N1yPtDZmgUmxJMXoeEwQbzKzh6r4oAgcuCeGvsSA5Pb0z0edWwlGW_uzCWtmQhDu8Fv4iy2d4dIrsiy0_CAw10seZ4MfkxCvkC2XY95q1FXV_TwY_DgolaAgTl7uPuZA3k3cSQLiZTsluEXXQGi4k7ekZ4tSKyY1QwRmHkqSoh-BOgbtnkmm2__6o3cx4UA0f95OIhZr4gS1Mkx3GkT2r7Jgm8eEXBjnnQ8YBSOjvh6MApFfahhtUo84SikB5Q_d6WQc7gzstZJGDrpecaq9PqLSBz_mEkNX3UsvZ9aFAAeFYEUScUPzOKWix5szoz5__fMP8F78dLh8EljavMQyDIHzwAJj-Uc3odENwAsnqDQO5_EhmQMZpi6N5X7yz8QBAfZSXTmjQL1cFjGh1XWox3nhU1labFjFARGE96X4b0v-TXcheuS_XojA90rbwlHZyPS1U4CpjmEleft3_03reJuRsbi0JY1sIM5nV0rfuBrXY",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"urn:ngsi-ld:BATTERY:xstorage\",\n    \"type\": \"BATTERY\",\n    \"SoC\": {\n        \"type\": \"Property\",\n        \"value\": 0.7\n    },\n    \"model\": {\n    \t\"type\": \"Property\",\n\t\t\"value\": \"xStorage\"\n    },\n    \"producer\": {\n    \t\"type\": \"Property\",\n    \t\"value\": \"Nissan\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://one.batterypass.fiware.dev/i4trust/ngsi-ld/v1/entities",
					"protocol": "https",
					"host": [
						"one",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"i4trust",
						"ngsi-ld",
						"v1",
						"entities"
					]
				}
			},
			"response": []
		},
		{
			"name": "ONE -> CREATE BATTERY at ONE",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": ".eyJpc3MiOiJFVS5FT1JJLkRFT05FIiwic3ViIjoiRVUuRU9SSS5ERVRXTyIsImp0aSI6ImMyYTQyZjRkLWNmNWYtNDM0Zi05MGJmLTI4NTY1MGNkODQyNCIsImlhdCI6MTY3NDczOTk2MCwiZXhwIjoxNjc0NzQzNTYwLCJhdWQiOiJFVS5FT1JJLkRFT05FIn0.eYp3jELI1Rr4DgQbVfMYUS6L8dsJEaaIh56aIu_uEbUQskeUXqAwy9PrKM268rEqMzujVPYgYt6szVHL2nMF195AxM3aejUnl_EumPNzMtWb5mTTBro7QwXR5J-fCPjfNTSKHF2D8FSEpPeA36yRqnmL2wdJ1seMVPQ1tEx7eRjZ_-_Y7yjx-1XPFBMBK8N1yPtDZmgUmxJMXoeEwQbzKzh6r4oAgcuCeGvsSA5Pb0z0edWwlGW_uzCWtmQhDu8Fv4iy2d4dIrsiy0_CAw10seZ4MfkxCvkC2XY95q1FXV_TwY_DgolaAgTl7uPuZA3k3cSQLiZTsluEXXQGi4k7ekZ4tSKyY1QwRmHkqSoh-BOgbtnkmm2__6o3cx4UA0f95OIhZr4gS1Mkx3GkT2r7Jgm8eEXBjnnQ8YBSOjvh6MApFfahhtUo84SikB5Q_d6WQc7gzstZJGDrpecaq9PqLSBz_mEkNX3UsvZ9aFAAeFYEUScUPzOKWix5szoz5__fMP8F78dLh8EljavMQyDIHzwAJj-Uc3odENwAsnqDQO5_EhmQMZpi6N5X7yz8QBAfZSXTmjQL1cFjGh1XWox3nhU1labFjFARGE96X4b0v-TXcheuS_XojA90rbwlHZyPS1U4CpjmEleft3_03reJuRsbi0JY1sIM5nV0rfuBrXY",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"urn:ngsi-ld:BATTERY:xstorage\",\n    \"type\": \"BATTERY\",\n    \"SoC\": {\n        \"type\": \"Property\",\n        \"value\": 0.7\n    },\n    \"model\": {\n    \t\"type\": \"Property\",\n\t\t\"value\": \"xStorage\"\n    },\n    \"producer\": {\n    \t\"type\": \"Property\",\n    \t\"value\": \"Nissan\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://one.batterypass.fiware.dev/i4trust/ngsi-ld/v1/entities",
					"protocol": "https",
					"host": [
						"one",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"i4trust",
						"ngsi-ld",
						"v1",
						"entities"
					]
				}
			},
			"response": []
		},
		{
			"name": "THREE -> GET BATTERIE SoC from ONE",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": ".eyJpc3MiOiJFVS5FT1JJLkRFT05FIiwic3ViIjoiRVUuRU9SSS5ERVRXTyIsImp0aSI6ImMyYTQyZjRkLWNmNWYtNDM0Zi05MGJmLTI4NTY1MGNkODQyNCIsImlhdCI6MTY3NDczOTk2MCwiZXhwIjoxNjc0NzQzNTYwLCJhdWQiOiJFVS5FT1JJLkRFT05FIn0.eYp3jELI1Rr4DgQbVfMYUS6L8dsJEaaIh56aIu_uEbUQskeUXqAwy9PrKM268rEqMzujVPYgYt6szVHL2nMF195AxM3aejUnl_EumPNzMtWb5mTTBro7QwXR5J-fCPjfNTSKHF2D8FSEpPeA36yRqnmL2wdJ1seMVPQ1tEx7eRjZ_-_Y7yjx-1XPFBMBK8N1yPtDZmgUmxJMXoeEwQbzKzh6r4oAgcuCeGvsSA5Pb0z0edWwlGW_uzCWtmQhDu8Fv4iy2d4dIrsiy0_CAw10seZ4MfkxCvkC2XY95q1FXV_TwY_DgolaAgTl7uPuZA3k3cSQLiZTsluEXXQGi4k7ekZ4tSKyY1QwRmHkqSoh-BOgbtnkmm2__6o3cx4UA0f95OIhZr4gS1Mkx3GkT2r7Jgm8eEXBjnnQ8YBSOjvh6MApFfahhtUo84SikB5Q_d6WQc7gzstZJGDrpecaq9PqLSBz_mEkNX3UsvZ9aFAAeFYEUScUPzOKWix5szoz5__fMP8F78dLh8EljavMQyDIHzwAJj-Uc3odENwAsnqDQO5_EhmQMZpi6N5X7yz8QBAfZSXTmjQL1cFjGh1XWox3nhU1labFjFARGE96X4b0v-TXcheuS_XojA90rbwlHZyPS1U4CpjmEleft3_03reJuRsbi0JY1sIM5nV0rfuBrXY",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://one.batterypass.fiware.dev/i4trust/ngsi-ld/v1/entities?type=BATTERY",
					"protocol": "https",
					"host": [
						"one",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"i4trust",
						"ngsi-ld",
						"v1",
						"entities"
					],
					"query": [
						{
							"key": "type",
							"value": "BATTERY"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "THREE -> GET BATTERIE from ONE denied",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": ".eyJpc3MiOiJFVS5FT1JJLkRFT05FIiwic3ViIjoiRVUuRU9SSS5ERVRXTyIsImp0aSI6ImMyYTQyZjRkLWNmNWYtNDM0Zi05MGJmLTI4NTY1MGNkODQyNCIsImlhdCI6MTY3NDczOTk2MCwiZXhwIjoxNjc0NzQzNTYwLCJhdWQiOiJFVS5FT1JJLkRFT05FIn0.eYp3jELI1Rr4DgQbVfMYUS6L8dsJEaaIh56aIu_uEbUQskeUXqAwy9PrKM268rEqMzujVPYgYt6szVHL2nMF195AxM3aejUnl_EumPNzMtWb5mTTBro7QwXR5J-fCPjfNTSKHF2D8FSEpPeA36yRqnmL2wdJ1seMVPQ1tEx7eRjZ_-_Y7yjx-1XPFBMBK8N1yPtDZmgUmxJMXoeEwQbzKzh6r4oAgcuCeGvsSA5Pb0z0edWwlGW_uzCWtmQhDu8Fv4iy2d4dIrsiy0_CAw10seZ4MfkxCvkC2XY95q1FXV_TwY_DgolaAgTl7uPuZA3k3cSQLiZTsluEXXQGi4k7ekZ4tSKyY1QwRmHkqSoh-BOgbtnkmm2__6o3cx4UA0f95OIhZr4gS1Mkx3GkT2r7Jgm8eEXBjnnQ8YBSOjvh6MApFfahhtUo84SikB5Q_d6WQc7gzstZJGDrpecaq9PqLSBz_mEkNX3UsvZ9aFAAeFYEUScUPzOKWix5szoz5__fMP8F78dLh8EljavMQyDIHzwAJj-Uc3odENwAsnqDQO5_EhmQMZpi6N5X7yz8QBAfZSXTmjQL1cFjGh1XWox3nhU1labFjFARGE96X4b0v-TXcheuS_XojA90rbwlHZyPS1U4CpjmEleft3_03reJuRsbi0JY1sIM5nV0rfuBrXY",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://one.batterypass.fiware.dev/i4trust/ngsi-ld/v1/entities?type=BATTERY",
					"protocol": "https",
					"host": [
						"one",
						"batterypass",
						"fiware",
						"dev"
					],
					"path": [
						"i4trust",
						"ngsi-ld",
						"v1",
						"entities"
					],
					"query": [
						{
							"key": "type",
							"value": "BATTERY"
						}
					]
				}
			},
			"response": []
		}
	]
}